#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define OTH     3


#define TAPPING_TERM 200
#define QUICK_TAP    150

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(Z)>;
        };

        combo_q {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp Q>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp SEMI>;
        };
    };
};

/ {


    behaviors {
        hm: layer_mods {
            compatible = "tap-preferred";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        tdclr: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_CLR>;
        };
        tdrst: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bootloader>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        tdg: tap_dance_g {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_G";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp G>, <&caps_word>;
        };
        tdh: tap_dance_h {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_M";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp H>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";


            bindings = <
     &gresc     &kp Q         &kp W        &kp E       &kp R         &kp T                              &kp Y        &kp U          &kp I       &kp O         &kp P   &none
     &kp TAB    &lt OTH A  &lt SYM S   &lt NAV D &hs LSHIFT F  &kp G                                &mt LG(LALT) H  &hs LSHIFT J &lt NAV K &lt SYM L &lt OTH SEMI &none
    &kp LSHIFT &mt LSHIFT Z       &kp X     &mt LCTL C &mt LALT V &mt LGUI B              &mt RCTL N &mt RALT M &mt RGUI COMMA &kp DOT   &mt RSHIFT FSLH &none
                              &mt LSHFT UNDER  &kp LGUI  &mt LC(LS(LALT)) BSPC                      &mt LC(LS(LALT)) SPACE &mt LG(LC(LS(LALT))) ENTER  &mt RSHFT MINUS
            >;
        };

        raise_layer {
            label = "Raise";


            bindings = <
    &none &gresc  &kp C_VOL_DN  &kp C_VOL_UP &kp LBKT   &kp LBRC                &kp RBRC   &kp RBKT   &kp C_PREV &kp C_NEXT &kp C_PLAY_PAUSE &none
   &none  &kp GRAVE   &none      &none      &none       &none                    &kp LEFT   &kp DOWN    &kp UP   &kp RIGHT   &kp DQT &none
   &none &kp TILDE   &none &kp LG(LS(LC(N3))) &kp LG(LS(LC(N4))) &kp LBKT            &kp RBKT  &kp MINUS  &kp EQUAL   &kp SQT   &kp BSLH &none
                                             &kp LCTL  &kp LALT   &kp BSLH                          &kp TAB  &kp EQUAL   &kp PLUS
            >;
        };
        lower_layer {
            label = "Lower  ";


            bindings = <
    &kp TILDE   &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                    &kp N6   &kp N7 &kp N8  &kp N9   &kp N0    &kp EQUAL 
    &kp TILDE   &none      &none      &none      &none      &none                     &none    &none  &none   &none    &kp SQT   &none  
    &kp LSHIFT  &none      &none      &none      &none      &none                     &none    &none  &none   &none    &none     &none 
                                              &trans        &kp LALT      &kp BSPC        &kp LC(LEFT)   &kp LC(UP)    &kp LC(RIGHT)
            >;
        };
    util_layer {
            label = "Util";


            bindings = <
    &kp GRAVE  &kp EXCL &kp AT &kp HASH  &kp DOLLAR &kp PRCNT                             &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR    &kp EQUAL
    &trans     &tdclr    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3              &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT   &kp SQT    &trans
    &kp LSHIFT &trans   &trans       &trans      &trans       &tdrst                      &tdrst &none   &none  &none &none &none  
                                             &trans        &kp LALT      &kp BSPC        &kp LC(LEFT)   &kp LC(UP)    &kp LC(RIGHT)     
            >;
        };
    };
};
